<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>ApexCharts Example</title>
    <!-- Include the ApexCharts library -->
    <script src="https://cdn.jsdelivr.net/npm/apexcharts"></script>


    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet"
          integrity="sha384-T3c6CoIi6uLrA9TneNEoa7RxnatzjcDSCmG1MXxSR1GAsXEV/Dwwykc2MPK8M2HN" crossorigin="anonymous">


    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"
            integrity="sha384-C6RzsynM9kWDrMNeT87bh95OGNyZPhcTNXj1NW7RuBCsyN/o0jlpcV8Qyq46cDfL"
            crossorigin="anonymous"></script>
</head>
<body>
<nav class="navbar navbar-expand-lg navbar-light bg-light">
    <div class="container-fluid">
        <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarSupportedContent"
                aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
        </button>

        <div class="collapse navbar-collapse" id="navbarSupportedContent">
            <ul class="navbar-nav ms-auto mb-2 mb-lg-0">
                <li class="nav-item actor">
                    <a class="nav-link" href="/celebrity">Actor</a>
                </li>
                <li class="nav-item charts">
                    <a class="nav-link">Charts</a>
                </li>
                <li class="nav-item admin">
                    <a class="nav-link" href="/admin">Admin</a>
                </li>
                <li class="nav-item download" style="cursor: pointer">
                    <a class="nav-link">PDF Download</a>
                </li>
                <li class="nav-item history" style="cursor: pointer">
                    <a class="nav-link">History</a>
                </li>
                <li class="nav-item quiz" style="cursor: pointer">
                    <a class="nav-link" href = "/quiz">Quiz</a>
                </li>
                <li class="nav-item main" style="cursor: pointer">
                    <a class="nav-link" href = "/main">Main</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="/translate">Translate</a>
                </li>

                <li class="nav-item">
                    <a class="nav-link" href="/">Login</a>
                </li>
            </ul>
        </div>
    </div>
</nav>
<div class="row" style="display: flex; align-items: center; justify-content: center; max-width: 1200px;">
    <div style="width: 547px;">
        <h2><%= translate.historyList %></h2>
        <div id="historyData"></div>
    </div>
    <div style="width: 547px;">
        <h2>Что вы искали</h2>
        <div id="count"></div>
    </div>
    <div style="width: 547px;">
        <h2><%= translate.stat %></h2>
        <div id="commonData"></div>
    </div>
    <div style="width: 547px;">
        <h2>Количество пользователей</h2>
        <div id="users"></div>
    </div>
</div>

<script>












    if (JSON.parse(localStorage.getItem("user")).isAdmin == false) {
        document.querySelector(".admin").remove()
    }
    document.querySelector(".charts").addEventListener("click", () => {
        window.location.href = "/charts/" + JSON.parse(localStorage.getItem("user"))._id
    })
    document.querySelector(".download").addEventListener("click", () => {
        console.log("click")
        window.location.href = "/pdfdownload/" + JSON.parse(localStorage.getItem("user"))._id
    })
    document.querySelector(".history").addEventListener("click", () => {
        window.location.href = "/history/" + JSON.parse(localStorage.getItem("user"))._id
    })
    let usersData = '<%- JSON.stringify(users) %>'
    usersData = JSON.parse(usersData)
    console.log(usersData)

    let history = '<%- JSON.stringify(history) %>'
    history = JSON.parse(history).history
    console.log(history)
    const options = {
        chart: {
            type: 'bar'
        },
        series: [{
            name: 'Sales',
            data: [30, 40, 35, 50, 49, 60, 70, 91, 125]
        }],
        xaxis: {
            categories: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep']
        }
    };

    const historyData = new ApexCharts(document.querySelector("#historyData"), {
        chart: {
            type: 'pie'
        },
        labels: ["Количество запросов"],
        series: [history.length]
    });

    const commonData = new ApexCharts(document.querySelector("#commonData"), {
        series: [history.filter((item) => {
            return item.type == "auth"
        }).length, history.filter((item) => {
            return item.type == "celebrity"
        }).length, history.filter((item) => {
            return item.type == "items"
        }).length, history.filter((item) => {
            return item.type == "pdfdownload"
        }).length, history.filter((item) => {
            return item.type == "edit"
        }).length],
        chart: {
            width: 380,
            type: 'pie',
        },
        labels: ["Авторизаций", "Сколько раз я искали животных", "Сколько раз я искали словали", "Скачиваний", "Редактирований"],
        responsive: [{
            breakpoint: 480,
            options: {
                chart: {
                    width: 200
                },
                legend: {
                    position: 'bottom'
                }
            }
        }]
    });









    // Extract unique prompts and their counts
    const promptCounts = history.reduce((accumulator, currentItem) => {
        accumulator[currentItem.prompt] = (accumulator[currentItem.prompt] || 0) + 1;
        return accumulator;
    }, {});

    const uniquePrompts = Object.keys(promptCounts);
    const count = new ApexCharts(document.querySelector("#count"), {
        chart: {
            type: 'area'
        },
        xaxis: {
            categories: uniquePrompts
        },
        series: [{
            name: 'Count',
            data: uniquePrompts.map(prompt => promptCounts[prompt])
        }]
    });

    const users = new ApexCharts(document.querySelector("#users"), {
        chart: {
            type: 'pie'
        },
        labels: ["Администраторов", "Пользователей"],
        series: [usersData.filter((item) => {
            return item.isAdmin
        }).length, usersData.filter((item) => {
            return !item.isAdmin
        }).length,]
    });

    const countryCount = new ApexCharts(document.querySelector("#countryCount"), {
        chart: {
            type: 'pie'
        },
        series: [history.filter((item) => {
            return item.type == "country"
        }).length]
    });

    const historyCount = new ApexCharts(document.querySelector("#historyCount"), {
        chart: {
            type: 'pie'
        },
        series: [history.filter((item) => {
            return item.type == "history"
        }).length]
    });

    historyData.render();
    commonData.render();
    count.render();
    users.render();
    countryCount.render();
    historyCount.render();
</script>
</body>
</html>